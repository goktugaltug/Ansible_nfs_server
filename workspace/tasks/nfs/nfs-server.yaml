- name: yum_update
  shell: "yum update"

- name: install_nfs_server
  shell: "yum install nfs-utils rpcbind -y"

- name: create_mountable_dir
  shell: |
    mkdir -p /opt/nfsdata
    chown nobody:nobody /opt/nfsdata

- name: write_in_export_file
  shell: echo -e "\n/opt/nfsdata	192.168.1.100(rw,sync,no_root_squash,no_subtree_check)" > /etc/exports

- name: start_firewall
  shell: |
    systemctl start firewalld
    systemctl enable firewalld

- name: enable_nfs_in_system
  shell: |
    systemctl enable rpcbind
    systemctl enable nfs-server

- name: start_nfs_in_system
  shell: |
    systemctl start rpcbind
    systemctl start nfs-server

- name: add_nfs_on_firewall
  shell: |
    firewall-cmd --add-service=nfs --zone=internal --permanent
    firewall-cmd --add-service=rpc-bind --zone=internal --permanent
    firewall-cmd --add-service=mountd --zone=internal --permanent



- name: restart_nfs_server
  shell: "systemctl restart nfs-server"


#- ansible.builtin.command: "yum update"
#- ansible.builtin.command: "yum install nfs-utils"


#- ansible.builtin.command: "mkdir -p /opt/nfsdata"
#- ansible.builtin.command: "chown nobody:nobody /opt/nfsdata"
#- ansible.builtin.lineinfile: path="/etc/exports" line="/opt/nfsdata	192.168.1.100(rw,sync,no_root_squash,no_subtree_check)"

#- ansible.builtin.command: "systemctl enable rpcbind"
#- ansible.builtin.command: "systemctl enable nfs-server"
#- ansible.builtin.command: "systemctl enable nfs-lock"
#- ansible.builtin.command: "systemctl enable nfs-idmap"

#- ansible.builtin.command: "systemctl start rpcbind"
#- ansible.builtin.command: "systemctl start nfs-server"
#- ansible.builtin.command: "systemctl start nfs-lock"
#- ansible.builtin.command: "systemctl start nfs-idmap"



#- ansible.builtin.command: "systemctl restart nfs-server"

#- ansible.builtin.command: "firewall-cmd --permanent --add-service=nfs"
#- ansible.builtin.command: "firewall-cmd --permanent --add-service=rpc-bind"
#- ansible.builtin.command: "firewall-cmd --permanent --add-service=mountd"
#- ansible.builtin.command: "firewall-cmd --permanent --add-service=reload"
